plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
}

mainClassName = 'com.eindopdracht.game.DesktopLauncher'

sourceCompatibility = 1.16
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../assets"]

project.ext.mainClassName = "com.eindopdracht.game.DesktopLauncher"
project.ext.assetsDir = new File("../assets")

import org.gradle.internal.os.OperatingSystem

/*task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}*/

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

task dist(type: Jar) {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}

apply plugin: 'java'

jar {
    manifest {
        attributes 'Main-Class': 'com.eindopdracht.game.DesktopLauncher'
    }
    // onderstaande is nodig voor fatjar
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// fatjar or smth
task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.baeldung.fatjar.Application'
    }
    baseName = 'all-in-one-jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

dist.dependsOn classes

eclipse.project.name = appName + "-desktop"


group = 'com.pi4j'
version = '0.0.1'

description = """Pi4J :: MINIMAL EXAMPLE :: Sample minimal project"""

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
}

// Copy the Java modules, run script and JAR in the distribution directory
tasks.register("copyDistribution", Copy) {
    from configurations.default
    from tasks.named('jar')
    from layout.projectDirectory.file('assets/run.sh')
    into layout.buildDirectory.dir('distribution')
}
tasks.named("build") {
    dependsOn("copyDistribution")
}

// Dependencies for this application, until V2 is released, snapshot is required here
repositories {
    mavenCentral()
}

